name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main

permissions:
  id-token: write  # Required for OIDC authentication with AWS
  contents: read   # Allows GitHub Actions to read repository contents

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Check Secrets Availability
        run: |
          if [ -z "${{ secrets.AWS_ROLE_ARN }}" ]; then
            echo "AWS_ROLE_ARN is not set"
          else
            echo "AWS_ROLE_ARN is available"
          fi
          if [ -z "${{ secrets.AWS_REGION }}" ]; then
            echo "AWS_REGION is not set"
          else
            echo "AWS_REGION is available"
          fi
          if [ -z "${{ secrets.LAMBDA_FUNCTION_NAME }}" ]; then
            echo "LAMBDA_FUNCTION_NAME is not set"
          else
            echo "LAMBDA_FUNCTION_NAME is available"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Optionally, add a command to verify AWS access
      - name: Verify AWS Authentication
        run: aws sts get-caller-identity

      - name: Prepare deployment package
        run: |
          zip function.zip lambda_function.py

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://function.zip

      - name: Update Lambda Environment Variables
        run: |
          # Retry logic for environment variable update
          for i in {1..5}; do
            aws lambda update-function-configuration \
              --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
              --environment "Variables={OMDB_API_KEY=${{ secrets.OMDB_API_KEY }},NOTION_API_KEY=${{ secrets.NOTION_API_KEY }},NOTION_DATABASE_ID=${{ secrets.NOTION_DATABASE_ID }}}" && break
            echo "Waiting for Lambda to finish the previous update..."
            sleep 30  # Wait for 30 seconds before retrying
          done
